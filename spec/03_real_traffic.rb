# frozen_string_literal: true

require_relative '../lib/huffman_tw'

describe '#decompress' do
  it 'Should decompress snap single correctly' do
    # full packet:
    #
    # 10 04 01 58 eb 9a f4
    # 7d 8d 29 15 a8 2b f4 d9 c7 9e ad
    # 2d da 8c f5 35 22 ac af a3 1f b4
    # 07 e2 4a c3 fa 3a 9a d4 be be 1e
    # ef 9f ac b8 01
    #
    # Teeworlds 0.7 Protocol packet
    #     Flags: compressed (..01 00..)
    #     Acknowledged sequence number: 4 (.... ..00 0000 0100)
    #     Number of chunks: 1
    #     Token: 58eb9af4
    #     Compressed payload (38 bytes)
    # Teeworlds 0.7 Protocol chunk: sys.snap_single
    #     Header (non-vital)
    #     Message: sys.snap_single
    #     Tick: 90
    #     Delta tick: 91
    #     Crc: 34658
    #     Data (45 bytes)


    compressed_snap = [
      0x7d, 0x8d, 0x29, 0x15, 0xa8, 0x2b, 0xf4, 0xd9, 0xc7, 0x9e, 0xad, 0x2d, 0xda, 0x8c, 0xf5, 0x35, 
      0x22, 0xac, 0xaf, 0xa3, 0x1f, 0xb4, 0x07, 0xe2, 0x4a, 0xc3, 0xfa, 0x3a, 0x9a, 0xd4, 0xbe, 0xbe, 
      0x1e, 0xef, 0x9f, 0xac, 0xb8, 0x01
    ]
    expected_decompress = [
      0x00, 0x36, 0x11, 0x9a, 0x01, 0x9b, 0x01, 0xa2, 0x9d, 0x04, 0x2d, 0x00, 0x03, 0x00, 0x06, 0x00, 
      0x00, 0x01, 0x00, 0x0a, 0x00, 0x84, 0x01, 0xb0, 0xe6, 0x01, 0x91, 0x26, 0x00, 0x80, 0x02, 0x00, 
      0x00, 0x00, 0x40, 0x00, 0x00, 0xb0, 0xe6, 0x01, 0x90, 0x26, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x01, 
      0x00, 0x00, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x00
    ]

    huffman = Huffman.new
    actual = huffman.decompress(compressed_snap)
    expect(actual).to eq(expected_decompress)
  end
end
